#Using Version 2 of Docker compose from this documentation: https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/wiki/Docker-Compose
version: '2'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
      - ./config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/nginx/conf.d/umami.conf:/etc/nginx/conf.d/umami.conf:ro
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nginx-net

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:2.2.1
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - nginx-net
    environment:
     - DEFAULT_EMAIL=miw023@ucsd.edu
  umami:
    image: ghcr.io/umami-software/umami:postgresql-v1.37.0
    container_name: umami
    ports:
      - "127.0.0.1:3000:3000"
    env_file: .env
    networks:
      - nginx-net
    depends_on:
      - db_umami
    restart: always
  db_umami:
    image: postgres:12-alpine
    container_name: db_umami
    env_file: .env
    volumes:
      - ./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro
      - umami-db-data:/var/lib/postgresql/data
    networks:
      - nginx-net 
    restart: always

volumes:
  umami-db-data:
  conf:
  vhost:
  html:
  dhparam:
  certs:

networks:
  nginx-net:
    external:
      name: nginx-net
